<?xml version="1.0"?>
<!-- =================================================================== -->
<!-- Name:         T24EnterpriseComponents                               -->
<!-- Description:  This ant file is responsible for building multiple    -->
<!--               T24 Enterprise Components as part of the same build.  -->
<!-- =================================================================== -->     
<project name="T24EnterpriseComponents" default="release" basedir=".">
    <property environment="env" />
    <path id="trunk.home.path">
        <pathelement location="${basedir}/.." />
    </path>
    <property name="trunk.home" refid="trunk.home.path" />
    <property file="common.build.properties" />

	<!-- Define the list of projects to be built -->
	<fileset id="ivy.buildlist.fileset" dir="${ivy.buildlist.dir}" includes="${ivy.buildlist.includes}" excludes="${ivy.buildlist.excludes}" />
	
    <!-- Import AntContrib -->
    <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${build.dependencies.dir}/resources/ant-contrib-1.0b3.jar" />
   
    <!-- Import T24 Antlet -->
	<import file="${build.dependencies.dir}/resources/t24ivy/xbuild.xml" />
    
    <!-- =================================================================== -->
    <!-- Initialisation                                                      -->
    <!-- =================================================================== -->
    <target name="init" unless="common.build.initialised" depends="verify-environment, create.ivy.buildlist" description="Initialise the T24 Enterprise Components build">
    	<path id="common.dist.dir.path">
            <pathelement location="${common.release.dir}" />
        </path>
    	<property name="common.dist.dir.os" refid="common.dist.dir.path" />
        <mkdir dir="${common.dist.dir.os}"/>        
        <mkdir dir="${common.build.dir}"/>        
        <mkdir dir="${common.build.dir}/log"/>        
        <propertyset id="project.common.properties">
        	<propertyref name="${product.suite.version}"/>
        </propertyset>
    	<condition property="isWindows">                
    		<os family="windows" />        
     	</condition>
		<echo message="${toString:ivy.buildlist.raw}" />

    	<!-- Obtain the product version from the ivy branch -->
        <property name="product.version" value="${product.suite.version}" />
    	<echo message="Product version:   ${product.version}" />
			
    	<property name="common.build.initialised" value="true"/> 
    </target>

	<!-- Check if the T24 Enterprise Component compile environment has been setup or not -->
	<target name="verify-environment" unless="env.is.checked">
		<echo message="Current environment settings are..." />
		<if>
			<or>
				<isset property="env.TAFJ_HOME" />
				<isset property="env.TAFC_HOME" />
			</or>
			<then>
				<echo message="TAFC Home : ${env.TAFC_HOME}" />
				<echo message="TAFJ Home : ${env.TAFJ_HOME}" />
			</then>
			<else>
				<fail message="Environment Variables TAFJ_HOME or TAFC_HOME Must be Set!" />
			</else>
		</if>
		<if>
			<isset property="env.T24_HOME" />
			<then>
				<echo message="T24 Home  : ${env.T24_HOME}" />
			</then>
			<else>
				<echo message="T24_HOME is MANDATORY as it is used to obtain basic inserts!" />
				<fail message="Environment Variable T24_HOME Must be Set!" />
			</else>
		</if>
		<if>
			<isset property="env.TAFC_HOME" />
			<then>
				<if>
					<and>
						<isset property="env.JBCEMULATE" />
						<equals arg1="${env.JBCEMULATE}" arg2="prime" />
					</and>
					<then>
						<echo message="JBCEMULATE: ${env.JBCEMULATE}" />
					</then>
					<else>
						<echo message="JBCEMULATE is MANDATORY to align Component Service(s) with rest of T24 when building for TAFC!" />
						<fail message="Environment Variable JBCEMULATE Must be set with emulation set to 'prime'!" />
					</else>
				</if>
			</then>
		</if>
		<property name="env.is.checked" value="true" />
	</target>
	
    <!-- =================================================================== -->
    <!-- Release:  Release build, publish artifacts and create build reports -->
    <!-- =================================================================== -->
    <target name="release" depends="init" description="Release build, publish artifacts and create build reports" >
        <mkdir dir="${common.dist.dir.os}/release"/>        
        <echo message="----------------------------------------------------------------------------"/>
        <echo message="|                 T24 Enterprise Components  - Release build               |"/>
		<echo message="----------------------------------------------------------------------------"/>
		<echo message="Build logs:  ${common.build.dir}/log" />
    	<buildT24EnterpriseComponentList 
    		buildlist="ivy.buildlist" 
    		antTarget="dist"
    		antCommonDistDir="${common.dist.dir.os}/release" />
    	<antcall target="dist" >
    		<param name="common.dist.dir.os" value="${common.dist.dir.os}" />
    		<param name="product.suite.version" value="${product.suite.version}" />
    	</antcall>
    </target>

    <!-- =================================================================== -->
    <!-- Debug:  Debug build and publish artifacts                           -->
    <!-- =================================================================== -->
    <target name="debug" depends="init" description="Debug build and publish artifacts" >
        <mkdir dir="${common.dist.dir.os}/debug"/>
        <echo message="----------------------------------------------------------------------------"/>
        <echo message="|                 T24 Enterprise Components  - Debug build                 |"/>
		<echo message="----------------------------------------------------------------------------"/>
		<echo message="Build logs:  ${common.build.dir}/log" />
    	<buildT24EnterpriseComponentList 
    		buildlist="ivy.buildlist" 
    		antTarget="build"
    		antCommonDistDir="${common.dist.dir.os}/debug" />
    </target>

    <!-- ========= Build a list of components ========== -->
    <macrodef name="buildT24EnterpriseComponentList" >
		<attribute name="buildlist"/>
		<attribute name="antTarget"/>
		<attribute name="antCommonDistDir" />
		<sequential>
			<for list="${ivy.buildlist}" param="file" delimiter="${path.separator}" >
				<sequential>
				    <available property="file.exists.@{file}" file="@{file}" />
				    <if>
				        <equals arg1="${file.exists.@{file}}" arg2="true" />
				        <then>
							<echo message="----------------------------------------------------"/>
							<echo message="| Processing:  @{file}" />
							<basename property="t24component.name.@{file}" file="@{file}" />
						    <if>
						        <equals arg1="${t24build.verbose}" arg2="true" />
						        <then>
						        	<!-- Verbose mode - Log to both file and standard output -->
						        	<buildT24EnterpriseComponentVerbose 
						        		name="${t24component.name.@{file}}"
						        		dir="@{file}"
						        		antTarget="@{antTarget}"
						        		antCommonDistDir="@{antCommonDistDir}" />
						        </then>
						        <else>
						        	<!-- Quite mode - Log to file only -->
						        	<buildT24EnterpriseComponent 
						        		name="${t24component.name.@{file}}"
						        		dir="@{file}"
						        		antTarget="@{antTarget}"
						        		antCommonDistDir="@{antCommonDistDir}" />
						        </else>
						    </if>
				        </then>
				        <else>
							<echo message="Skipping build:   @{file}" />
				        </else>
				    </if>
				</sequential>
			</for>
		</sequential>
    </macrodef>

	<!-- ========= Build T24 component (quiet mode) ========== -->
	<macrodef name="buildT24EnterpriseComponent">
		<attribute name="name"/>
		<attribute name="dir"/>
		<attribute name="antTarget"/>
		<attribute name="antCommonDistDir" />
		<sequential>
		    <available property="build.xml.exists.@{dir}" file="@{dir}/build.xml" />
		    <if>
		        <equals arg1="${build.xml.exists.@{dir}}" arg2="true" />
		        <then>
					<java   classname="org.apache.tools.ant.launch.Launcher"
					        fork="true"
					        failonerror="true"
					        dir="@{dir}"
					        timeout="4000000"
							output="${common.build.dir}/log/@{name}.log"
					        taskname="startAnt" >
						<jvmarg value="-Dant.home=${ant.home}"/>
					    <classpath>
					        <pathelement location="${ant.home}/lib/ant-launcher.jar"/>
					    </classpath>
					    <arg value="-Dbasedir=@{dir}"/>
					    <arg value="@{antTarget}"/>
			            <syspropertyset refid="project.common.properties" />
						<sysproperty key="common.dist.dir.os" value="@{antCommonDistDir}" />
					</java>
		        </then>
		    </if>
		</sequential>
	</macrodef>

	<!-- ========= Build T24 component (verbose mode) ========== -->
	<macrodef name="buildT24EnterpriseComponentVerbose">
		<attribute name="name"/>
		<attribute name="dir"/>
		<attribute name="antTarget"/>
		<attribute name="antCommonDistDir" />
		<sequential>
		    <available property="build.xml.exists.@{dir}" file="@{dir}/build.xml" />
		    <if>
		        <equals arg1="${build.xml.exists.@{dir}}" arg2="true" />
		        <then>
		        	<ant target="@{antTarget}" dir="@{dir}" antfile="build.xml" inheritall="no"
			        	output="${common.build.dir}/log/@{name}.log" >
			            <propertyset refid="project.common.properties" />
						<property name="common.dist.dir.os" value="@{antCommonDistDir}" />
			        </ant>
		        </then>
		    </if>
		</sequential>
	</macrodef>
	
    <!-- =================================================================== -->
    <!-- show.scheduled:  Show the list of components scheduled for a build  -->
    <!-- =================================================================== -->
    <target name="show.scheduled" depends="init" description="Build and publish artifacts" >
    	<echo message="ivy.buildlist.dir:  ${ivy.buildlist.dir}" />
		<echo message="ivy.buildlist.raw:  ${toString:ivy.buildlist.raw}" />
		<echo message="Scheduled builds:" />
    	<for list="${ivy.buildlist}" param="file" delimiter="${path.separator}" >
			<sequential>
				<echo message="  ---> @{file}" />
			</sequential>
		</for>
    </target>

    <!-- =================================================================== -->
    <!-- Test:  Run unit and integration tests                               -->
    <!-- =================================================================== -->
    <target name="test" depends="init" description="Run unit and integration tests" >
        <echo message="----------------------------------------------------------------------------"/>
        <echo message="|                    Testing T24 Enterprise Components                     |"/>
		<echo message="----------------------------------------------------------------------------"/>
    	<buildT24EnterpriseComponentList 
    		buildlist="ivy.buildlist" 
    		antTarget="test" 
    		antCommonDistDir="${common.dist.dir.os}" />
	</target>

    <!-- =================================================================== -->
    <!-- Dist: Release T24 Enterprise Components                             -->
    <!-- =================================================================== -->
    <target name="dist" depends="init" description="Release T24 Enterprise Components" >
    	
    	<echo message="			============================== " />
    	<echo message="			===== Releasing Artifacts ==== " />
    	<echo message="			============================== " />
    	
    	<!-- Delete all old releases and archives -->
		<delete>
			<fileset dir="${common.dist.dir.os}" includes="T24EnterpriseComponents_*.zip"/>
		</delete>
    	<!-- Archiving all components as packages -->
		<echo message="Releasing all components as single archive." />
	    <zip destfile="${common.dist.dir.os}/T24EnterpriseComponents_${product.suite.version}.zip" >
		    <fileset dir="${common.dist.dir.os}${file.separator}release" includes="**" /> 
		</zip>
    </target>
	
	<target name="get.comp.base.name" description="Target to find out the base name of the component from source directory.">
		<basename property="comp.name" file="${comp.src.dir}" />
		<var name="comp.basename" value="${comp.name}" />
	</target>
    <!-- =================================================================== -->
    <!-- Clean:  Clean everything                                            -->
    <!-- =================================================================== -->
    <target name="clean" depends="init, clean.projects" description="Cleans the build directories">
        <!-- Clean common resources -->
        <delete dir="${common.dist.dir.os}" />
        <delete dir="${common.build.dir}" />
	</target>

    <!-- =================================================================== -->
    <!-- Clean project resources                                             -->
    <!-- =================================================================== -->
    <target name="clean.projects" description="Clean the T24 Enterprise Projects">
    	<buildT24EnterpriseComponentList 
    		buildlist="ivy.buildlist" 
    		antTarget="clean"
    		antCommonDistDir="${common.dist.dir.os}" />
    </target>

</project>

